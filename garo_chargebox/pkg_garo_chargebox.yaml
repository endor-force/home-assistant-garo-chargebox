### GARO EV Charger package.
###
### Load in configuration.yaml as a package under homeassistant.
###
### *** example ***
###
###     homeassistant:
###         packages:
###             garo_chargebox: !include garo_chargebox/pkg_garo_chargebox.yaml
###
### ***


### Mother sensor where raw measurements are imported and stored in to attributes.
sensor:
  - platform: rest
    name: Laddbox
    resource: http://192.168.xxx.yyy:8080/servlet/rest/chargebox/status
    json_attributes:
        - connector
        - mode
        - currentLimit
        - pilotLevel
        - powerMode
        - currentChargingCurrent
        - currentChargingPower
        - accSessionEnergy
        - latestReading
        - currentTemperature
        - sessionStartValue
        - nrOfPhases
        - sessionStartTime
        - accSessionMillis
    value_template: '{{ value_json.connector }}'

### For turning on and off / making charging available.
switch:
    - platform: command_line
      switches:
        laddbox_mode:
            friendly_name: 'Laddbox tillgänglig'
            command_on: '/usr/bin/curl -s -X POST http://192.168.xxx.yyy:8080/servlet/rest/chargebox/mode/ALWAYS_ON'
            command_off: '/usr/bin/curl -s -X POST http://192.168.xxx.yyy:8080/servlet/rest/chargebox/mode/ALWAYS_OFF'
            command_state: '/usr/bin/curl -s -X GET http://192.168.xxx.yyy:8080/servlet/rest/chargebox/status'
            value_template: '{{ value_json.mode == "ALWAYS_ON" }}'


### Templates to convert units and set separate sensors from attributes.
template:
    - sensor:
        - unique_id: 'laddbox_chargingcurrent'
          name: 'Aktuell laddström'
          icon: mdi:flash-circle
          unit_of_measurement: 'A'
          state_class: measurement
          state: >
            {% set state = state_attr('sensor.laddbox', 'currentChargingCurrent')/1000 | round(1) %}
            {% if state >= 0 %}
            {{state}}
            {% else %}
            0
            {% endif %}

        - unique_id: 'laddbox_chargingpower'
          name: 'Aktuell förbrukning'
          icon: mdi:resistor
          unit_of_measurement: 'kW'
          state_class: measurement
          state: >
            {% set state = state_attr('sensor.laddbox', 'currentChargingPower')/1000 | round(1) %}
            {% if state >= 0 %}
            {{state}}
            {% else %}
            0
            {% endif %}

        - unique_id: 'laddbox_sessionenergy'
          name: 'Laddat sedan anslutning'
          icon: mdi:clock-start
          state: '{{ state_attr("sensor.laddbox", "accSessionEnergy")/1000 | round(1) }}'
          unit_of_measurement: 'kWh'
          state_class: measurement

        - unique_id: 'laddbox_totalconsumption'
          name: 'Total förbrukning'
          icon: mdi:gauge
          unit_of_measurement: 'kWh'
          state: >
            {% set state = state_attr('sensor.laddbox', 'latestReading')/1000 | round(1) %}
            {% if state > 0 %}
              {{state}}
            {% endif %}

        - unique_id: 'laddbox_temp'
          name: 'Laddbox temp'
          icon: mdi:thermometer
          state: '{{ state_attr("sensor.laddbox", "currentTemperature") }}'
          unit_of_measurement: '°C'
          state_class: measurement

        - unique_id: 'laddbox_chargerstatus'
          name: 'Laddbox status'
          state: >
            {# Enumerate and give the chargebox translation texts. #}
            {%-
            set box_status = {
                'CHARGING_FINISHED' : 'Klar',
                'CHARGING_CANCELLED' : 'Avbruten',
                'CHARGING_PAUSED' : 'Pausad av lastbalanserare',
                'NOT_CONNECTED' : 'Ej ansluten',
                'CONNECTED' : 'Ansluten',
                'SEARCH_COMM' : 'Ansluten - söker',
                'CHARGING' : 'Laddar',
                'RCD_FAULT' : 'Skyddsbrytare utlöst',
                'OVERHEAT' : 'Överhettad, begränsad',
                'CRITICAL_TEMPERATURE' : 'Kritisk temperatur',
                'INITIALIZATION' : 'Initierar',
                'CABLE_FAULT' : 'Kabelfel',
                'LOCK_FAULT' : 'Låsfel',
                'CONTACTOR_FAULT' : 'Kontaktorfel',
                'VENT_FAULT' : 'Ventileringsfel',
                'DC_ERROR' : 'DC-fel',
                'DISABLED' : 'Inaktiverad',
                'UNAVAILABLE' : 'Laddning pausad (Master)',
                'REMOTE_DISABLED' : 'Externt deaktiverad',
                'DC_HARDWARE' : 'DC hårdvarufel',
                'CP_FAULT' : 'Kommunikationsfel (CP-signal)',
                'CP_SHORTED' : 'Kommunikationsfel (CP-kortsluten)'
            }
            -%}

            {# Get the box status from the attribute connector #}
            {% set status = state_attr('sensor.laddbox','connector') %}

            {#- Check if the status is translated and return the translated text.
            If a translation is not found then status text will be raw status text. -#}
            {% if box_status.get(status) %}
            {{box_status.get(status)}}
            {% else %}
            {{status}}
            {% endif %}

### Setting up meters for total consumption over time.
utility_meter:
    laddning_bil_manad:
      source: sensor.total_forbrukning
      cycle: monthly

    laddning_bil_daglig:
      source: sensor.total_forbrukning
      cycle: daily
